:
eval 'exec perl -w -S $0 ${1+"$@"}'
 if 0; 

use strict;

# --------------------------------------------------------------------  
# very stupid morphological generator for french
#
# Our intention here is not to build a useful morphological generator
# but to demonstrate what kind of inputs and outputs GenI expects 
# from third party generators.
# --------------------------------------------------------------------  

while (<STDIN>) {
  my $lemma = "";
  my %has_feat;

  if (/(.*) \[(.*)\]/) {   # parse out values
    $lemma = $1;
    my $featstr = $2;
    # store the features into a hash
    # note: this is not feature -> attribute but a simple
    # hash with feat:attr as key
    %has_feat = ();
    $_ = $featstr;
    for (split) { $has_feat{$_} = 1 }
  }

  # determiners
  if ($lemma eq "le") {
    if    ($has_feat{"num:pl"}) { print "les"; }
    elsif ($has_feat{"gen:f"})  { print "la"; }
    else  { print "le"; }
  }
  if ($lemma eq "un") {
    if    ($has_feat{"num:pl"}) { print "des"; }
    elsif ($has_feat{"gen:f"})  { print "une"; }
    else  { print "un"; }
  }


  # verbs
  elsif ($has_feat{"cat:v"}) {
    my $stem = $lemma;
    if ($stem =~ s/er$//) {
      if ($has_feat{"num:pl"}) {
        print $stem."ons" if ($has_feat{"pers:1"});
        print $stem."ez"  if ($has_feat{"pers:2"});
        print $stem."ent" if ($has_feat{"pers:3"});
      } else {
        if ($has_feat{"pers:2"}) { print $stem."es" }
        else { print $stem."e" }
      }
    }
    if ($stem =~ s/re$//) {
      if ($has_feat{"num:pl"}) {
        print $stem."ons" if ($has_feat{"pers:1"});
        print $stem."ez"  if ($has_feat{"pers:2"});
        print $stem."ent" if ($has_feat{"pers:3"});
      } else {
        if ($has_feat{"pers:3"}) { print $stem }
        else { print $stem."s" }
      }
    }
  }

  # nouns ˆ l'anglaise
  elsif ($has_feat{"cat:n"}) {
    my $stem = $lemma;
    if ($has_feat{"num:pl"}) {
      print $stem."s";
    } else { print $stem; }
  }
  
  else { print $lemma; }
  print "\n";
}
