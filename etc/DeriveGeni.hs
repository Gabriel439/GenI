#!/usr/bin/env runhaskell

import NLP.GenI.Btypes
import BinaryDerive
import Data.Generics.Basics

main =
 do putStrLn "module NLP.GenI.BtypesBinary where"
    putStrLn ""
    putStrLn "import Data.Binary"
    putStrLn "import NLP.GenI.Btypes"
    putStrLn ""
    putStrLn "-- auto-generated by the Data.Binary BinaryDerive tool"
    putDerive (undefined :: Ptype)
    putDerive (undefined :: GeniVal)
    putDerive (undefined :: GNode)
    putDerive (undefined :: GType)
    putDerive (undefined :: Ttree GNode)
    putDerive (undefined :: ILexEntry)

putDerive :: Data a => a -> IO ()
putDerive = putStrLn.derive
